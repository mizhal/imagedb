@startuml Model 

class HasTimestamp {
    + id: Integer;
    + created_at: Timestamp;
    + updated_at: Timestamp;
}

class Photo <<HasTimestamp>> {
    + url: Text; 
    + content: Attachment;
} 

class Categorization <<HasTimestamp>> {
    + volume: String;
    + section: String;
} 

class Descriptor <<HasTimestamp>> {
    + predicate: ? String;
    + term: String;
    + codified_term: ? CodexEntry;

    + as_context(): Context;
}

class CodexEntry <<HasTimestamp>> {
    + name: String;
    + text: String;

    + as_context(): Context;
}

class ImageHash {
    + hash: String;
}

class Valoration{
    + stars: Integer;
    + is_favorite: Boolean;
} 

class Context{
    + descriptors:[] Descriptor;

    + bind( photos:[] Photo ): Boolean;
}

class ExternalEntry {
    + url: String;
    + image_url: String;
    + combined_html_text: String;
    + metadata_bag: {}; 
} 

class SourceApi {
    + url_schema: String;

    + get_final_url(params: {}): String;
} 

CodexEntry *--> Categorization: belongs_to

Photo "1" -- "*" Descriptor

ImageHash --> Photo: belongs_to

Photo <--* "1" Valoration: belongs_to

@enduml
