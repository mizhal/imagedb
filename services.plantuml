@startuml Services

class ImageCapture::Result { 
    + error_log: [] String;
    + status: { "OK", "ERROR", "NOT_FOUND" };
    + image: ? Photo;
    + http_status: Integer;
    + items_ok: [] String;
    + items_pending: [] String;  
} 

class ImageCaptureService <<Singleton>> {
    + capture(url: String): ImageCapture::Result;
    + capture_many(url_list: [] String): ImageCapture::Result;
    + capture_from_flow(entries: [] ExternalEntry);
}

class ImageImportService <<Singleton>> {
    + import(fname: String): ImageCapture::Result;
    + import_directory(dirname: String): ImageCapture::Result;
}

interface SourceFlowService {
    + setSourceAPI(api_record: SourceAPI);
    + setFlowParams(flow_params: {});
    + getEntries(since: ? DateTime): [] ExternalEntry;  
}

TumblrSourceService --|> SourceFlowService
class TumblrSourceService {

} 

@enduml

